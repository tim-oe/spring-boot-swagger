/**
 * root build script
 * https://github.com/aurmam/gradle-multimodule-app
 *
 * gradle build file genned from idea
 * setup is for spring boot add using spring initializr
 * https://www.jetbrains.com/help/idea/spring-boot.html
 * https://www.youtube.com/watch?v=he63dwZdhOM
 * https://discuss.gradle.org/t/how-to-remove-a-task-dependency/7481/7
 * https://docs.gradle.org/current/javadoc/constant-values.html#org.gradle.api.artifacts.Dependency.CLASSIFIER
 * https://stackoverflow.com/questions/44429751/how-to-use-junit-5-with-gradle
 *
 * to  get deps you have to be within the subproject
 * gradle dependencies --configuration=<compile, testImplementation>
 **/
buildscript {
    dependencies {
        // workaround for failing spotbugs with lint
        // https://github.com/spotbugs/spotbugs-gradle-plugin/issues/128
        classpath group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    }
}

plugins {
    // https://docs.gradle.org/current/userguide/java_plugin.html
    id 'java'

    // https://docs.gradle.org/current/userguide/idea_plugin.html
    // https://www.jetbrains.com/help/idea/gradle.html
    id 'idea'

    // https://pmd.github.io/
    // https://docs.gradle.org/current/userguide/pmd_plugin.html
    id 'pmd'

    // https://plugins.gradle.org/plugin/io.spring.dependency-management
    id "io.spring.dependency-management" version "1.0.9.RELEASE"

    // https://plugins.gradle.org/plugin/org.springframework.boot
    // https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
    id 'org.springframework.boot' version '2.2.6.RELEASE'

    // https://plugins.gradle.org/plugin/com.github.spotbugs
    // https://spotbugs.readthedocs.io/en/stable/gradle.html
    // https://remal.gitlab.io/gradle-plugins/
    id "com.github.spotbugs" version "4.2.0"

    // https://plugins.gradle.org/plugin/io.freefair.lombok
    // https://projectlombok.org/
    id "io.freefair.lombok" version "5.0.1"

    // https://plugins.gradle.org/plugin/net.nemerosa.versioning
    // https://github.com/nemerosa/versioning
    // gradle versionDisplay | versionFile
    id 'net.nemerosa.versioning' version '2.12.1'

    // https://plugins.gradle.org/plugin/com.dorongold.task-tree
    // example gradle :OEApi:build :OEApi:taskTree
    id "com.dorongold.task-tree" version "1.5"

    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    id 'jacoco'

    // https://plugins.gradle.org/plugin/nebula.lint
    // https://github.com/nebula-plugins/gradle-lint-plugin
    // https://github.com/nebula-plugins/gradle-lint-plugin/wiki
    // https://github.com/nebula-plugins/gradle-lint-plugin/wiki/Using-Lint
    id 'nebula.lint' version '16.7.0'

    // https://docs.gradle.org/current/userguide/publishing_maven.html
    id 'maven-publish'
}

// this needs to be here for global plugin refs
repositories {
    maven {
        url "http://localhost:8082/artifactory/maven-central-remote"
    }
    maven {
        url "http://localhost:8082/artifactory/jcenter-remote"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
        //url "http://localhost:8082/artifactory/plugins-remote"
    }
}

bootJar.enabled = false
gradleLint.alwaysRun = true
pmdTest.enabled = false

subprojects {
    group 'org.tec'

    // this needs to be here to actuate plugins for sub projects
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'net.nemerosa.versioning'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'pmd'
    apply plugin: 'com.dorongold.task-tree'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'jacoco'
    apply plugin: 'nebula.lint'

    repositories {
        maven {
            url "http://localhost:8082/artifactory/maven-central-remote"
        }
        maven {
            url "http://localhost:8082/artifactory/jcenter-remote"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
            //url "http://localhost:8082/artifactory/plugins-remote"
        }
    }

    sourceCompatibility = '1.11'
    targetCompatibility = '1.11'

    version = versioning.info.full

    versioning {
        scm = 'git'
    }

    // http://andresalmiray.com/customize-jar-manifest-entries-with-maven-gradle/
    jar {
        manifest {
            attributes(
                    'Built-By'       : System.properties['user.name'],
                    'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                    'Build-Revision' : versioning.info.commit,
                    'Created-By'     : "Gradle ${gradle.gradleVersion}",
                    'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
            )
        }
    }

    // https://github.com/nemerosa/versioning/issues/45
    task generateVersionInfo {
        doLast {
            File file = project.file('src/main/resources/version.properties')
            if(!file.exists()){
                file.createNewFile()
            }
            file.text = """\

# This file is generated at build time to contain version information
# For the /manage/info endpoint
info.app.version = ${rootProject.versioning.info.display}
info.build.date = ${new Date().format("yyyy-MM-dd'T'HH:mm:ss")}
info.build.display = ${rootProject.versioning.info.display}
info.build.full = ${rootProject.versioning.info.full}
info.build.branch = ${rootProject.versioning.info.branchId}
info.build.build = ${rootProject.versioning.info.build}
info.build.commit = ${rootProject.versioning.info.commit}
info.build.source = ${rootProject.versioning.info.branch}
info.build.sourceType = ${rootProject.versioning.info.branchType}
"""
        }
    }

    processResources.dependsOn generateVersionInfo

// https://github.com/spotbugs/spotbugs-gradle-plugin/issues/32
// https://spotbugs.readthedocs.io/en/latest/gradle.html
// https://github.com/spotbugs/spotbugs-gradle-plugin#readme
    spotbugs {
        ignoreFailures = false
        toolVersion = "4.0.4"
    }

    spotbugsMain {
        reports {
            html {
                enabled = true
                destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
                stylesheet = 'fancy-hist.xsl'
            }
        }
    }

    // https://junit.org/junit5/docs/current/user-guide/
    // https://medium.com/@jonashavers/how-to-use-junit-5-with-gradle-fb7c5c3286cc
    test {
        useJUnitPlatform{
            excludeTags 'server'
        }

        testLogging.showStandardStreams = true
        testLogging.showStackTraces = true

        // Always run tests, even when nothing changed.
        //dependsOn 'cleanTest'

        // Show test results.
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    // https://stackoverflow.com/questions/20032366/running-jacocoreport
    jacoco {
        toolVersion = "0.8.4"
    }

    jacocoTestReport {
        reports {
            xml.enabled=false
            csv.enabled=false
            html.destination file("${buildDir}/reports/jacoco")
        }
    }

// https://stackoverflow.com/questions/54162117/pmd-rule-not-included-but-executed-by-gradle
    pmd {
        consoleOutput = true
        toolVersion = "6.22.0"
        ruleSets = []
        ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
    }

    dependencies {
        compileOnly  group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.12'

        //https://github.com/rzwitserloot/lombok/issues/1945
        // https://stackoverflow.com/questions/17729384/lombok-added-but-getters-and-setters-not-recognized-in-intellij-idea
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        
        // logging
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

        // encrypt secrets in config files
        // https://medium.com/@sun30nil/how-to-secure-secrets-and-passwords-in-springboot-90c952961d9
        // TODO gradle task it?
        //java -cp ~/bin/jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input=<val to encrypt> password=oe-dev-key algorithm=PBEWITHMD5ANDDES
        implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.2'

        // upgrade causes errors
        // https://stackoverflow.com/questions/53926264/nosuchmethoderror-org-junit-platform-commons-util-reflectionutils-trytoloadclas
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$JUNIT_VERSION"
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$JUNIT_VERSION"

        testImplementation group: 'org.springframework', name: 'spring-test', version: "$SPRING_VERSION"
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$SPRING_BOOT_VERSION"

        testImplementation group: 'org.mockito', name: 'mockito-core', version: "$MOCKITO_VERSION"
        testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$MOCKITO_VERSION"
    }
}